services:
  traefik:
    image: traefik:v2.11
    container_name: traefik
    restart: always
    ports:
      - "80:80"
      - "443:443"
    command:
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.le.acme.tlschallenge=true"
      #- "--certificatesresolvers.le.acme.email=your-email@example.com"
      #- "--certificatesresolvers.le.acme.storage=/letsencrypt/acme.json"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      #- "./letsencrypt:/letsencrypt"
    networks:
      - fluxton_network

  fluxton_db:
    image: postgres:latest
    container_name: fluxton_db
    environment:
      - POSTGRES_USER=${DATABASE_USER:-postgres}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD:-yourpassword}
      - POSTGRES_DB=${DATABASE_NAME:-fluxton_db}
    volumes:
      - fluxton_db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - fluxton_network
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${DATABASE_USER:-postgres}" ]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s

  fluxton_app:
    build:
      context: .
    container_name: fluxton_app
    environment:
      - APP_ENV=${APP_ENV:-development}
      - DATABASE_URL=postgres://${DATABASE_USER:-postgres}:${DATABASE_PASSWORD:-yourpassword}@fluxton_db:5432/${DATABASE_NAME:-fluxton_db}
      - DATABASE_HOST=fluxton_db
      - DATABASE_USER=${DATABASE_USER:-postgres}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD:-yourpassword}
      - DATABASE_NAME=${DATABASE_NAME:-fluxton_db}
      - DATABASE_SSL_MODE=disable
    depends_on:
      fluxton_db:
        condition: service_healthy
    networks:
      - fluxton_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.fluxton_app.rule=Host(`${APP_URL}`)"
      - "traefik.http.routers.fluxton_app.entrypoints=web"
      - "traefik.http.services.fluxton_app.loadbalancer.server.port=8080"
      #- "traefik.http.routers.fluxton_app.tls.certresolver=le"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # still TODO: revisit for security
networks:
  fluxton_network:
    name: fluxton_network
    driver: bridge

volumes:
  fluxton_db_data:
