services:
  traefik:
    image: traefik:v2.11
    container_name: traefik
    restart: always
    ports:
      - "80:80"
      - "443:443"
    command:
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.le.acme.tlschallenge=true"
      - "--certificatesresolvers.le.acme.email=hello@fluxend.app"
      - "--certificatesresolvers.le.acme.storage=/letsencrypt/acme.json"
      - "--log.level=DEBUG"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./letsencrypt:/letsencrypt"
    networks:
      - fluxend_network

  fluxend_db:
    image: postgres:latest
    container_name: fluxend_db
    environment:
      - POSTGRES_USER=${DATABASE_USER:-postgres}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD:-yourpassword}
      - POSTGRES_DB=${DATABASE_NAME:-fluxend_db}
    volumes:
      - fluxend_db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - fluxend_network
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${DATABASE_USER:-postgres}" ]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s

  fluxend_app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fluxend_app
    environment:
      - APP_ENV=${APP_ENV:-development}
      - DATABASE_URL=postgres://${DATABASE_USER:-postgres}:${DATABASE_PASSWORD:-yourpassword}@fluxend_db:5432/${DATABASE_NAME:-fluxend_db}
      - DATABASE_HOST=fluxend_db
      - DATABASE_USER=${DATABASE_USER:-postgres}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD:-yourpassword}
      - DATABASE_NAME=${DATABASE_NAME:-fluxend_db}
      - DATABASE_SSL_MODE=disable
    depends_on:
      fluxend_db:
        condition: service_healthy
    networks:
      - fluxend_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.fluxend_app.rule=Host(`api.${APP_URL}`) || Host(`${APP_URL}`) && PathPrefix(`/api`)"
      - "traefik.http.routers.fluxend_app.entrypoints=web"
      - "traefik.http.services.fluxend_app.loadbalancer.server.port=8080"
      #- "traefik.http.routers.fluxend_app.tls.certresolver=le"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  fluxend_frontend:
    build:
      context: ./web
      dockerfile: Dockerfile
    container_name: fluxend_frontend
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - VITE_FLX_API_BASE_URL=${VITE_FLX_API_BASE_URL:-http://fluxend_app:8080}
      # Add other frontend environment variables here
    depends_on:
      - fluxend_app
    networks:
      - fluxend_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.fluxend_frontend.rule=Host(`${APP_URL}`)"
      - "traefik.http.routers.fluxend_frontend.entrypoints=web"
      - "traefik.http.services.fluxend_frontend.loadbalancer.server.port=3000"
      #- "traefik.http.routers.fluxend_frontend.tls.certresolver=le"

networks:
  fluxend_network:
    name: fluxend_network
    driver: bridge

volumes:
  fluxend_db_data: