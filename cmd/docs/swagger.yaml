basePath: /v2
definitions:
  column_requests.CreateRequest:
    properties:
      columns:
        items:
          $ref: '#/definitions/types.TableColumn'
        type: array
    type: object
  organization_requests.CreateRequest:
    properties:
      name:
        type: string
    type: object
  organization_requests.MemberCreateRequest:
    properties:
      user_id:
        type: string
    type: object
  resources.OrganizationResponse:
    properties:
      createdAt:
        type: string
      createdBy:
        type: string
      name:
        type: string
      updatedAt:
        type: string
      updatedBy:
        type: string
      uuid:
        type: string
    type: object
  resources.TableResponse:
    properties:
      columns:
        items:
          $ref: '#/definitions/types.TableColumn'
        type: array
      createdAt:
        type: string
      createdBy:
        type: string
      name:
        type: string
      projectUuid:
        type: string
      updatedAt:
        type: string
      updatedBy:
        type: string
      uuid:
        type: string
    type: object
  resources.UserResponse:
    properties:
      bio:
        type: string
      createdAt:
        type: string
      email:
        type: string
      roleId:
        type: integer
      status:
        type: string
      updatedAt:
        type: string
      username:
        type: string
      uuid:
        type: string
    type: object
  responses.Response:
    properties:
      content: {}
      errors:
        items:
          type: string
        type: array
      success:
        type: boolean
    type: object
  types.TableColumn:
    properties:
      default:
        type: string
      name:
        type: string
      notNull:
        type: boolean
      primary:
        type: boolean
      type:
        type: string
      unique:
        type: boolean
    type: object
host: fluxton.io/api
info:
  contact:
    email: chief@fluxton.io
    name: API Support
    url: http://github.com/fluxton-io/fluxton
  description: Fluxton is backend as-a-service platform that allows you to build,
    deploy, and scale applications without managing infrastructure.
  title: Fluxton API
  version: "1.0"
paths:
  /organizations:
    get:
      consumes:
      - application/json
      description: Get all organizations
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of organizations
          schema:
            allOf:
            - $ref: '#/definitions/responses.Response'
            - properties:
                content:
                  items:
                    $ref: '#/definitions/resources.OrganizationResponse'
                  type: array
              type: object
        "401":
          description: Unauthorized
        "500":
          description: Internal server error
      summary: List all organizations
      tags:
      - organizations
    post:
      consumes:
      - application/json
      description: Add a new organization
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Organization name
        in: body
        name: organization
        required: true
        schema:
          $ref: '#/definitions/organization_requests.CreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Organization created
          schema:
            allOf:
            - $ref: '#/definitions/responses.Response'
            - properties:
                content:
                  $ref: '#/definitions/resources.OrganizationResponse'
              type: object
        "400":
          description: Invalid input
        "401":
          description: Unauthorized
        "422":
          description: Unprocessable entity
        "500":
          description: Internal server error
      summary: Create a new organization
      tags:
      - organizations
  /organizations/{organization_id}:
    delete:
      consumes:
      - application/json
      description: Remove an organization
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Organization ID
        in: path
        name: organization_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Organization deleted
          schema:
            $ref: '#/definitions/responses.Response'
        "401":
          description: Unauthorized
        "500":
          description: Internal server error
      summary: Delete an organization
      tags:
      - organizations
    get:
      consumes:
      - application/json
      description: Get details of a specific organization
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Organization ID
        in: path
        name: organization_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Organization details
          schema:
            allOf:
            - $ref: '#/definitions/responses.Response'
            - properties:
                content:
                  $ref: '#/definitions/resources.OrganizationResponse'
              type: object
        "400":
          description: Invalid input
        "401":
          description: Unauthorized
        "422":
          description: Unprocessable entity
        "500":
          description: Internal server error
      summary: Show details of a single organization
      tags:
      - organizations
    put:
      consumes:
      - application/json
      description: Modify an existing organization's details
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Organization ID
        in: path
        name: organization_id
        required: true
        type: string
      - description: Updated organization details
        in: body
        name: organization
        required: true
        schema:
          $ref: '#/definitions/organization_requests.CreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Organization updated
          schema:
            allOf:
            - $ref: '#/definitions/responses.Response'
            - properties:
                content:
                  $ref: '#/definitions/resources.OrganizationResponse'
              type: object
        "400":
          description: Invalid input
        "401":
          description: Unauthorized
        "422":
          description: Unprocessable entity
        "500":
          description: Internal server error
      summary: Update an organization
      tags:
      - organizations
  /organizations/{organization_id}/users:
    get:
      consumes:
      - application/json
      description: Get all users in an organization
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Organization ID
        in: path
        name: organization_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: User created
          schema:
            allOf:
            - $ref: '#/definitions/responses.Response'
            - properties:
                content:
                  items:
                    $ref: '#/definitions/resources.UserResponse'
                  type: array
              type: object
        "400":
          description: Invalid input
        "401":
          description: Unauthorized
        "422":
          description: Unprocessable entity
        "500":
          description: Internal server error
      summary: List all users in an organization
      tags:
      - organizations
    post:
      consumes:
      - application/json
      description: Add a new user to an organization
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Organization ID
        in: path
        name: organization_id
        required: true
        type: string
      - description: User ID JSON
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/organization_requests.MemberCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: User created
          schema:
            allOf:
            - $ref: '#/definitions/responses.Response'
            - properties:
                content:
                  $ref: '#/definitions/resources.UserResponse'
              type: object
        "400":
          description: Invalid input
        "401":
          description: Unauthorized
        "422":
          description: Unprocessable entity
        "500":
          description: Internal server error
      summary: Create a user in an organization
      tags:
      - organizations
  /organizations/{organization_id}/users/{user_id}:
    delete:
      consumes:
      - application/json
      description: Remove a user from an organization
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Organization ID
        in: path
        name: organization_id
        required: true
        type: string
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: User deleted
        "400":
          description: Invalid input
        "401":
          description: Unauthorized
        "422":
          description: Unprocessable entity
        "500":
          description: Internal server error
      summary: Delete a user from an organization
      tags:
      - organizations
  /projects/{project_id}/tables/{table_id}/columns:
    post:
      consumes:
      - application/json
      description: Create new columns in a specified table within a project.
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: string
      - description: Table ID
        in: path
        name: table_id
        required: true
        type: string
      - description: Columns JSON
        in: body
        name: columns
        required: true
        schema:
          $ref: '#/definitions/column_requests.CreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Columns created
          schema:
            allOf:
            - $ref: '#/definitions/responses.Response'
            - properties:
                content:
                  $ref: '#/definitions/resources.TableResponse'
              type: object
        "400":
          description: Invalid input
        "401":
          description: Unauthorized
        "422":
          description: Unprocessable entity
        "500":
          description: Internal server error
      summary: Add new columns to a table
      tags:
      - columns
    put:
      consumes:
      - application/json
      description: Alter the data type of existing columns in a specified table.
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: string
      - description: Table ID
        in: path
        name: table_id
        required: true
        type: string
      - description: Updated column definitions
        in: body
        name: columns
        required: true
        schema:
          $ref: '#/definitions/column_requests.CreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Columns altered
          schema:
            allOf:
            - $ref: '#/definitions/responses.Response'
            - properties:
                content:
                  $ref: '#/definitions/resources.TableResponse'
              type: object
        "400":
          description: Invalid input
        "401":
          description: Unauthorized
        "422":
          description: Unprocessable entity
        "500":
          description: Internal server error
      summary: Modify column types in a table
      tags:
      - columns
  /projects/{project_id}/tables/{table_id}/columns/{column_name}:
    delete:
      consumes:
      - application/json
      description: Permanently delete a specific column from a given table.
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: string
      - description: Table ID
        in: path
        name: table_id
        required: true
        type: string
      - description: Column Name
        in: path
        name: column_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Column deleted successfully
        "400":
          description: Invalid input
        "401":
          description: Unauthorized
        "404":
          description: Column not found
        "500":
          description: Internal server error
      summary: Delete a column from a table
      tags:
      - columns
swagger: "2.0"
